Authentic {
    # database settings
    DB {
        # the name of the database to use, ignored if using H2, default: authentic
        database="miftas_minecraft"
        # the database host, ignored if using H2, default: localhost
        host="agurotis.serveriai.lt"
        # the port to connect to the database, ignored if using H2, default: 3306
        port=3306
        # the password to use with the user, ignored if using H2, default: ""
        pwd=Minecraftas123
        # the table to use, ignored if using H2, default: authentic
        table=authentic
        # the database type to use [H2 / MYSQL], default: MYSQL
        type=MYSQL
        # the user to connect to the database with, ignored if using H2, default: authentic
        user="miftas_admin"
    }
    # text config for localization (english by default)
    L10n {
        # 		DESCRIPTIONS
        descriptions {
            # 		/logged's description
            commandLoggedDesc="Get the player's logged status"
            # 		/login's description
            commandLoginDesc="Allows to authenticate to the server"
            # 		/register's description
            commandRegisterDesc="Allows to register or to change the password"
        }
        # 		ERRORS
        errors {
            # 		when an error happened with the database (ex: unable to connect)
            errorDB="An issue happened with the database, the command couldn't succeed."
            # 		when unable to copy the H2 db file.
            errorDBFile="Authentic couldn't create the database file"
            # 		when the player made an attempt to change his password without being logged in
            errorNotLogged="Tu nesi prisijunges!\nTau reikia prisijungti pirma, jog pasikeisti slaptazodi!"
            # 		when the player tried to register a password that was too short (minimum size set by minimumPwdSize, passed through %s)
            errorPwdTooShort="Jusu slaptazdosi buvo per trumpas!\nMaziausias galimas is simboliu %s"
            # 		when something launched /login or /register and wasn't a player 
            errorUnableToLog="Jums negalima prisijungti"
        }
        # 		SERVER'S LOGS
        server {
            # 		displays the database jdbs string in pre-init
            dbPointsTo="Database points to: %s"
            # 		used at initialization
            init="init Authentic..."
            # 		used at pre-initialization, after loading this config file.
            preInit="pre-init Authentic..."
            # 		used when registering commands x (put %s for the command name)
            registeringCommand="Regitering command %s"
            # 		used when allowRegister = false
            skipRegistration="skipping /register registration as specified in config"
        }
        user {
            # 		SERVER LOGS ON USER ACTIONS
            logs {
                # 		when the player's data is retrieved from db (%s for his name)
                dbQuery="Ieskoma zaidejo %s"
                # 		when the player's data has been successfully sent to the database. (%s for player's name)
                dbSync="Sinchronizuotas vartotojas %s"
                # 		displayed in console when a new player has joined (put %s for the player's name)
                playerJoin="Naujas zaidejasr: %s"
                # 		when the player changes his pwd (%s for his name)
                playerJustChangedPwd="%s pakeite slaptazodi!"
                # 		displayed when the player has logged in using /login (%s for his name)
                playerJustLogged="%s prisijunges!"
                # 		when the player has registered using /register (%s for his name)
                playerJustRegistered="%s registruotas!"
                # 		displayed when a player has exitted the game (put %s for his name)
                playerQuit="Atsijunge zaidejas: %s"
            }
            # 		MESSAGE/COMMAND'S RESULTS
            messages {
                # 		when the player asked for his status and wasn't logged in
                logStatusFalse="Tu neprisijungei!"
                # 		when the player asked his status (logged in or not) and was logged in, or when he registered or logged in
                logStatusTrue="Tu prisijungei!"
                # 		when the the player changed his password using /register
                passwordSet="Slapta≈æodis sukurtas!"
                # 		when a player asked the log status of another player which wasn't logged in
                playerLogStatusFalse="%s nera prisijunges!"
                # 		when a player asked the log status of another player which was logged in
                playerLogStatusTrue="%s yra prisijunges!"
                # 		when the player didn't log in time
                timeOut="Laiku neprisijungei prie paskyros!"
                # 		when the player was already logged in with the "logCacheDelay" rule (%s for the rule's value)
                welcomeAlreadyLog="Tu jau buvai prisijunges su siuo IP adresu per pastarasias %s sekundziu.\nTau nebereikia prisijungti su /login."
                # 		when the player has joined and has already registered
                welcomeLog="Sveiki sugrize ! Prisijunkite su komanda /login <slaptazodis>."
                # 		when the player has joined and is registered
                welcomeReg="Registruokites i serveri su komanda /register <slaptazodis> <pakartoti slaptazodi>."
                # 		when the player made an attempt to login with an incorrect password
                wrongPassword="Ivestas slaptazodis yra neteisingas!"
            }
        }
        # 		WARNINGS
        warnings {
            # 		when the player attempts to move or interact with things without being logged in
            warnNotLogged="Turite prisijungti pries darant ka nors!"
            # 		when the player attempted to change his pwd using /register without being logged in
            warnNotRegistered="Esate neuzsiregistraves! Uzsiregistruokite su komanda /register <slaptazodis> <pakartoti slaptazodi>"
            # 		when the player entered two different password with /register
            warnPwdDiff="Ivedete skirtingus slaptazodzius!"
            # 		when a player tries to hurt a non-logged player
            warnTargetNotLogged="Zaidejas dar nera prisijunges!"
        }
    }
    # if non-logged players can send commands, default: false
    allowCommands=false
    # if non-logged players can drop items, default: false
    allowDropItems=false
    # enables the usage of /register, default: true
    allowRegister=true
    # kick players on wrong password given when using /login, default: false
    doKickOnWrongPwd=false
    # immobilizes the players while they aren't logged, default: true
    immobilizePlayers=true
    # if non-logged players can be hurted, default: true
    invulnerablePlayers=true
    # the amount of time in seconds since the player left for him to connect from the same ip without /login. default: 30
    logCacheDelay=60
    # minimum password length, default: 6
    minimumPwdSize=6
    # the amount of time to wait before kicking the players in seconds, default: 30
    timeOutDelay=30
}
